(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     35104,        880]
NotebookOptionsPosition[     32061,        791]
NotebookOutlinePosition[     32497,        808]
CellTagsIndexPosition[     32454,        805]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["VQCDThermo thermodynamic computations tutorial", "Subsubtitle",
 CellChangeTimes->{{3.609146124285007*^9, 3.609146124603237*^9}, {
  3.6091462346066427`*^9, 3.6091462465845118`*^9}}],

Cell["\<\
This notebook contains a minimal tutorial for computing the thermodynamic \
parametrizations in VQCD, producing data that can be analyzed to reproduce \
the (corrected form of) the phase diagram in arxiv:1312.5199, and more. You \
should read the paper, and go through BasicTutorial.nb before reading this \
notebook. It may be easiest to read this and ThermoAnalysisTutorial.nb in \
parallel.

First we load the package:\
\>", "Text",
 CellChangeTimes->{{3.609146249507469*^9, 3.609146421144231*^9}, {
  3.60966577358176*^9, 3.6096658102084217`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VQCDThermo`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.609146422757681*^9, 3.609146456624634*^9}}],

Cell["\<\
Then we need to define the potentials for which we want to compute solutions \
to. Pick the potential used in 1312.5199:\
\>", "Text",
 CellChangeTimes->{{3.6091464682346354`*^9, 3.609146494344706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xf", " ", "=", " ", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pots", " ", "=", " ", 
  RowBox[{"DefineJKPotIKappaMod", "[", "xf", "]"}]}]}], "Input",
 CellChangeTimes->{{3.609146501496935*^9, 3.6091465203539886`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "VQCDThermo`VQCDCore`Private`Vg$1013", ",", 
   "VQCDThermo`VQCDCore`Private`Vf$1013", ",", 
   "VQCDThermo`VQCDCore`Private`\[Kappa]$1013", ",", 
   "VQCDThermo`VQCDCore`Private`\[Kappa]$1013"}], "}"}]], "Output",
 CellChangeTimes->{3.6091539374621067`*^9, 3.6091567532293158`*^9, 
  3.609489851010388*^9, 3.609490103143724*^9, 3.6114706585209427`*^9}]
}, Open  ]],

Cell["\<\
The basic data for computing the thermo is simply to generate a grid of \
solutions parametrized by \[Lambda]h and nt. That is, a number of values of \
nt are chosen, and an interpolation of the thermodynamic variables as a \
function of \[Lambda]h is generated for each. Then, a number of values of \
\[Lambda]h are chosen, and interpolations as a function of nt are generated \
for each.

The simplest way to do this is to just use ComputeStandardThermo, as shown \
below. It generates a standard grid of thermofunctions, and attempts to \
divine correct settings, parameter ranges etc by analyzing the potential. \
While it is of course not bulletproof, it generates a reasonable starting \
point for the potentials tested this far.

Currently, the computation tends to spend a very long time in refining the \
interpolations near points where numerical fluctuations make the thermo \
functions irregular. For that reason, the computation takes between 20 \
minutes to 10 hours per curve, yielding up to 1000hours/number of cores \
available for the total computation time. The actual data has been computed \
on the calc.phys.jyu.fi server, which has 64 cores, and took about overnight. \
It is not recommended to try the computation below on a laptop. Here we have \
started the computation and then aborted it after a while, just to show how \
the output should look like. Some occasional non-numeric point and max \
recursion exceeded -messages are common, and seem difficult to avoid.

Work is ongoing both in trying to limit the amount of computation spent on \
refining the areas around numerical fluctuations, and to reduce the \
fluctuations themselves.

The basic parameters are just the potentials and the path to the directory \
where the results should be saved.\
\>", "Text",
 CellChangeTimes->{{3.609146531376005*^9, 3.6091466218809547`*^9}, {
  3.609146757105466*^9, 3.609146803831607*^9}, {3.609150927822525*^9, 
  3.609151111156406*^9}, {3.609151150487328*^9, 3.609151295794229*^9}, {
  3.6091513572760973`*^9, 3.609151460189954*^9}, {3.609156458735429*^9, 
  3.609156487833461*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeStandardThermo", "[", 
  RowBox[{"pots", ",", " ", "\"\<DirectoryForData\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.609151415797493*^9, 3.609151421359784*^9}, {
  3.609151463846767*^9, 3.6091514736986094`*^9}, {3.609153487035602*^9, 
  3.609153487946512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"Symmetric nt -values to compute: \\!\\({0.`, \
0.012793697745622813`, 0.05117479098249125`, 0.11514327971060533`, \
0.204699163929965`, 0.31984244364057035`, 0.4605731188424213`, \
0.6268911895355178`, 0.81879665571986`, 1.036289517395448`, \
1.2793697745622814`, 1.5480374272203603`, 1.8422924753696852`, \
2.1621349190102555`, 2.5075647581420712`, 2.8785819927651333`, \
3.27518662287944`, 3.697378648484993`, 4.145158069581792`, \
4.618524886169835`, 5.117479098249126`, 5.642020705819661`, \
6.192149708881441`, 6.767866107434468`, 7.369169901478741`, \
7.9960610910142575`, 8.648539676041022`, 9.326605656559032`, \
10.030259032568285`, 10.759499804068787`, 11.514327971060533`}\\)\"\>",
  StringForm[
  "Symmetric nt -values to compute: `1`", {0., 0.012793697745622813`, 
   0.05117479098249125, 0.11514327971060533`, 0.204699163929965, 
   0.31984244364057035`, 0.4605731188424213, 0.6268911895355178, 
   0.81879665571986, 1.036289517395448, 1.2793697745622814`, 
   1.5480374272203603`, 1.8422924753696852`, 2.1621349190102555`, 
   2.5075647581420712`, 2.8785819927651333`, 3.27518662287944, 
   3.697378648484993, 4.145158069581792, 4.618524886169835, 5.117479098249126,
    5.642020705819661, 6.192149708881441, 6.767866107434468, 
   7.369169901478741, 7.9960610910142575`, 8.648539676041022, 
   9.326605656559032, 10.030259032568285`, 10.759499804068787`, 
   11.514327971060533`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471060253993*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Symmetric \[Lambda]h -values to compute: \
\\!\\({0.010000000000000004`, 0.011904182147016404`, 0.014170955258934411`, \
0.016869363259957516`, 0.020081597295072078`, 0.02390549920035699`, \
0.028457541679640458`, 0.033876375961075095`, 0.0403270549921446`, \
0.04800606080792362`, 0.057147289201826844`, 0.06802917398667702`, \
0.08098316784484731`, 0.09640383808674642`, 0.11476088482561067`, \
0.136613447631684`, 0.1626271364339453`, 0.19359430541573724`, \
0.23045818742940605`, 0.27434162404308954`, 0.32658126631172324`, \
0.3887682879978025`, 0.4627968513309572`, 0.5509218015309385`, \
0.6558273474186709`, 0.780708820066647`, 0.9293699997855616`, \
1.1063389759419926`, 1.317006068595707`, 1.5677880129289283`, \
1.8663234073814863`}\\)\"\>",
  StringForm[
  "Symmetric \[Lambda]h -values to compute: `1`", {0.010000000000000004`, 
   0.011904182147016404`, 0.014170955258934411`, 0.016869363259957516`, 
   0.020081597295072078`, 0.02390549920035699, 0.028457541679640458`, 
   0.033876375961075095`, 0.0403270549921446, 0.04800606080792362, 
   0.057147289201826844`, 0.06802917398667702, 0.08098316784484731, 
   0.09640383808674642, 0.11476088482561067`, 0.136613447631684, 
   0.1626271364339453, 0.19359430541573724`, 0.23045818742940605`, 
   0.27434162404308954`, 0.32658126631172324`, 0.3887682879978025, 
   0.4627968513309572, 0.5509218015309385, 0.6558273474186709, 
   0.780708820066647, 0.9293699997855616, 1.1063389759419926`, 
   1.317006068595707, 1.5677880129289283`, 1.8663234073814863`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471060303841*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Broken nt -values to compute: \\!\\({0.`, \
0.056525557039003464`, 0.22610222815601386`, 0.5087300133510312`, \
0.9044089126240554`, 1.4131389259750866`, 2.0349200534041247`, \
2.76975229491117`, 3.6176356504962217`, 4.578570120159282`, \
5.6525557039003465`, 6.839592401719419`, 8.139680213616499`, \
9.552819139591584`, 11.07900917964468`, 12.71825033377578`, \
14.470542601984887`, 16.335885984272`, 18.314280480637127`, \
20.405726091080247`, 22.610222815601386`}\\)\"\>",
  StringForm[
  "Broken nt -values to compute: `1`", {0., 0.056525557039003464`, 
   0.22610222815601386`, 0.5087300133510312, 0.9044089126240554, 
   1.4131389259750866`, 2.0349200534041247`, 2.76975229491117, 
   3.6176356504962217`, 4.578570120159282, 5.6525557039003465`, 
   6.839592401719419, 8.139680213616499, 9.552819139591584, 11.07900917964468,
    12.71825033377578, 14.470542601984887`, 16.335885984272, 
   18.314280480637127`, 20.405726091080247`, 22.610222815601386`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471075376266*^9}],

Cell[BoxData["\<\"Computing \[Lambda]end(nt = 0).\"\>"], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471075377686*^9}],

Cell[BoxData[
 InterpretationBox["\<\"\[Lambda]end(nt = 0) = \
\\!\\(1.690545820593834`\\)\"\>",
  StringForm["\[Lambda]end(nt = 0) = `1`", 1.690545820593834],
  Editable->False]], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471892358406*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Broken \[Lambda]h -values to compute: \
\\!\\({1.6922363664144273`, 2.9311495200298325`, 5.077090694472779`, \
8.794109527254596`, 15.232416955155637`, 26.384311632305597`, \
45.70068573884461`, 79.1588844957153`, 137.1123626112227`, \
237.49450362516177`, 411.3680063415764`, 712.5370653146962`, \
1234.196781520502`, 2137.771871338116`, 3702.8686529665447`, \
6413.797676428346`, 11109.440946872635`, 19242.83932523096`, \
33330.827992824685`, 57732.85718966692`, 100000.0000000002`}\\)\"\>",
  StringForm[
  "Broken \[Lambda]h -values to compute: `1`", {1.6922363664144273`, 
   2.9311495200298325`, 5.077090694472779, 8.794109527254596, 
   15.232416955155637`, 26.384311632305597`, 45.70068573884461, 
   79.1588844957153, 137.1123626112227, 237.49450362516177`, 
   411.3680063415764, 712.5370653146962, 1234.196781520502, 2137.771871338116,
    3702.8686529665447`, 6413.797676428346, 11109.440946872635`, 
   19242.83932523096, 33330.827992824685`, 57732.85718966692, 
   100000.0000000002}],
  Editable->False]], "Print",
 CellChangeTimes->{3.609151518772999*^9, 3.6091517139323587`*^9, 
  3.6091518643493567`*^9, 3.609151993537039*^9, 3.609152080885594*^9, 
  3.6091521637225533`*^9, 3.609152229916388*^9, 3.60915235794347*^9, 
  3.609152559305505*^9, 3.60915261358108*^9, 3.6091527792181892`*^9, 
  3.6091531075150757`*^9, 3.60915318476752*^9, 3.609153220686129*^9, 
  3.609153429346916*^9, 3.609153488442169*^9, 3.609153946156217*^9, 
  3.611471892601397*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \\!\\(0.`\\)\"\>",
  StringForm["Computing `1` thermo, param = `2`", "ntconstant", 0.],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471928825012*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.012793697745622813`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.012793697745622813`],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471928889607*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.05117479098249125`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.05117479098249125],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719291167927`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.11514327971060533`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.11514327971060533`],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719291675863`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.204699163929965`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.204699163929965],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471929214126*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.31984244364057035`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.31984244364057035`],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471929267496*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.4605731188424213`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.4605731188424213],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471929322404*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Computing ntconstant thermo, param = \
\\!\\(0.6268911895355178`\\)\"\>",
  StringForm[
  "Computing `1` thermo, param = `2`", "ntconstant", 0.6268911895355178],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471929371976*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719328431673`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471932961488*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471933045457*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471933146617*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719332060757`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471933272003*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719333556747`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u lower limit \\!\\(-4.605170185988091`\\)\"\>",
  
  StringForm["Found u lower limit `1`", -4.605170185988091],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471933422598*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6249682287545619`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6249682287545619],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719607088547`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(39.90376400000000245427145273424685001373`7.621613776568631\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   39.90376400000000245427145273424685001373`7.621613776568631],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471960887857*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471960967041*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471961038794*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6248695983259516`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6248695983259516],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471961826518*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.02508799999999666852090740576386451721`7.633649434579976\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.02508799999999666852090740576386451721`7.633649434579976],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471961901738*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471961966954*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719620334272`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.624927132742641`\\)\"\>",
  StringForm["Found u upper limit `1`", 0.624927132742641],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719621206408`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.19955399999999912097337073646485805511`7.635492427944134\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.19955399999999912097337073646485805511`7.635492427944134],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962203618*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.624590145444889`\\)\"\>",
  StringForm["Found u upper limit `1`", 0.624590145444889],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962273088*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962368813*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.36357000000000283534973277710378170013`7.637217927997795\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.36357000000000283534973277710378170013`7.637217927997795],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962457921*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6249682287545619`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6249682287545619],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719625247803`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6249517903497936`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6249517903497936],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962599148*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962669002*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6247627486949571`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6247627486949571],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962741919*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6114719628258142`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found u upper limit \\!\\(0.6249682287545619`\\)\"\>",
  
  StringForm["Found u upper limit `1`", 0.6249682287545619],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962891177*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.62906199999999756755642010830342769623`7.639996538607587\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.62906199999999756755642010830342769623`7.639996538607587],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471962971013*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.55566600000000221371010411530733108521`7.639230160287147\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.55566600000000221371010411530733108521`7.639230160287147],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963043096*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.75763299999999844658304937183856964111`7.641335786315662\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.75763299999999844658304937183856964111`7.641335786315662],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963120893*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963192865*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Found limits for solution in \
\\!\\(41.72854800000000352611095877364277839661`7.6410331864035355\\) \
seconds...\"\>",
  StringForm[
  "Found limits for solution in `1` seconds...", 
   41.72854800000000352611095877364277839661`7.6410331864035355],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963271125*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963343079*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963409009*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963421153*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Starting to compute thermo interpolation. Started at \
\\!\\(13\\):\\!\\(39\\)... \"\>",
  StringForm[
  "Starting to compute thermo interpolation. Started at `1`:`2`... ", 13, 39],
  
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963493958*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.61147196357097*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963644086*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963721546*^9}],

Cell[BoxData["\<\"Constructing fscale[u]...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.611471963786859*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6091515329808407`*^9, 3.6091517190207977`*^9, 
  3.609151869101893*^9, 3.609152000913145*^9, 3.609152090436713*^9, 
  3.609152172252667*^9, 3.609152240766996*^9, 3.6091523709981327`*^9, 
  3.609152564802167*^9, 3.609152618692733*^9, 3.609152803211864*^9, 
  3.609153115043706*^9, 3.609153193072406*^9, 3.60915323764507*^9, 
  3.609153433918453*^9, 3.609153498610154*^9, 3.609156160175502*^9, 
  3.611473413306798*^9}]
}, Open  ]],

Cell["\<\
In general, the above computation will produce a good overall view of the \
phase diagram, but for details, some more curves are needed near more \
interesting details. The following command shows how:\
\>", "Text",
 CellChangeTimes->{{3.6091565029327507`*^9, 3.609156586288328*^9}, {
  3.609156728373279*^9, 3.609156738250279*^9}}],

Cell[BoxData[
 RowBox[{"ComputeStandardThermo", "[", 
  RowBox[{
  "pots", ",", " ", "\"\<DirectoryForData\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"\[Lambda]hlist", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", " ", "1.1"}], "}"}]}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "List", " ", "of", " ", "\[Lambda]h", " ", "values", " ", "for", " ", 
      "which", " ", "a", " ", "curve", " ", "as", " ", "a", " ", "function", 
      " ", "of", " ", "nt", " ", "is", " ", "computed"}], ",", " ", 
     RowBox[{
     "in", " ", "the", " ", "chirally", " ", "symmetric", " ", "phase"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ntlist", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "6."}], "}"}]}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "List", " ", "of", " ", "nt", " ", "values", " ", "for", " ", "which", 
      " ", "a", " ", "curva", " ", "as", " ", "a", " ", "function", " ", "of",
       " ", "\[Lambda]h", " ", "is", " ", "computed"}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "symmetric", " ", "phase"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Lambda]h\[Tau]hlist", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1.8", ",", " ", "100.", ",", " ", "400."}], "}"}]}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "List", " ", "of", " ", "\[Lambda]h", " ", "values", " ", "for", " ", 
      "which", " ", "a", " ", "curve", " ", "as", " ", "a", " ", "function", 
      " ", "of", " ", "nt", " ", "is", " ", "computed"}], ",", " ", 
     RowBox[{
     "in", " ", "the", " ", "phase", " ", "with", " ", "broken", " ", 
      "chiral", " ", "symmetry"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"nt\[Tau]hlist", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"4.", ",", " ", "15."}], "}"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "List", " ", "of", " ", "nt", " ", "values", " ", "for", " ", "which", 
      " ", "a", " ", "curve", " ", "as", " ", "a", " ", "function", " ", "of",
       " ", "\[Lambda]h", " ", "is", " ", "computed"}], ",", " ", 
     RowBox[{
     "in", " ", "the", " ", "phase", " ", "with", " ", "broken", " ", 
      "chiral", " ", "symmetry"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
   "\[Lambda]h\[Tau]hlowerlimit", " ", "\[Rule]", " ", 
    "1.690545820593834`"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Set", " ", "the", " ", "lower", " ", "limit", " ", "of", " ", "the", 
      " ", "existence", " ", "of", " ", "the", " ", "non"}], "-", 
     RowBox[{"zero", " ", "\[Tau]h", " ", "branch"}]}], ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "already", " ", "know", " ", "from", " ", 
     "above", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "the", " ", "print", " ", "output", " ", "calls", " ", "it", " ", 
        "\[Lambda]end", 
        RowBox[{"(", 
         RowBox[{"nt", " ", "=", " ", "0"}], ")"}]}], ")"}], ".", " ", 
      "This"}], " ", "saves", " ", "a", " ", "few", " ", "minutes", " ", "of",
      " ", "time"}]}], "*)"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.609156739855583*^9, 3.6091568686584263`*^9}, {
  3.609156928425908*^9, 3.60915714127748*^9}, {3.6094899119976397`*^9, 
  3.6094900769112053`*^9}}],

Cell["\<\
Other important options are
\[Lambda]hcurves, ntcurves, \[Lambda]h\[Tau]hcurves and nt\[Tau]hcurves \
control the number of curves computed when not specifying an explicit list of \
values as above (note that the lists override the automatic curves, though)

\[Lambda]hOptions, ntOptions, \[Lambda]h\[Tau]hOptions and nt\[Tau]hOptions \
allow passing options further down. For example
\[Lambda]h\[Tau]hOptions -> {SolveAndScaleOptions -> {ARange -> 120}} would \
set the ARange in the main solver, when computing the chirally symmetric \
\[Lambda]h-curves, to 120. The other subcategories are:
\[Lambda]h\[Tau]hOptions -> {InterpolationOptions -> {...}} sets options for \
FunctionInterpolation used to control the density of points generated
\[Lambda]h\[Tau]hOptions -> {\[Tau]hOptions -> {...}} sets options for \
\[Tau]hFromQuarkMass
\[Lambda]h\[Tau]hOptions -> {\[Tau]hExistenceOptions -> {...}} sets options \
for \[Tau]hFromQuarkMass, when only finding out whether a solution exists at \
all
\[Lambda]h\[Tau]hOptions -> {NumLimitOptions -> {...}} sets options for \
FindNumLimit, which is used to find the parameter range where the solution \
exists.

The list is same for the other three curvetype options. In addition, \
AllCurvesOptions allows passing options down to all the curves at once.

Parallel -> False makes the code not run in parallel. This is useful for \
testing, since running the code fully parallel tends to slow down a laptop to \
a near unusable state.\
\>", "Text",
 CellChangeTimes->{{3.609156950135708*^9, 3.6091569578547783`*^9}, {
  3.60915714357412*^9, 3.609157222011739*^9}, {3.609157253360877*^9, 
  3.609157260613752*^9}, {3.609157411526682*^9, 3.609157800744082*^9}, {
  3.611471151433243*^9, 3.611471195839077*^9}, {3.611473632896533*^9, 
  3.611473642052443*^9}, {3.611473709617497*^9, 3.6114737111637287`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.609157553325924*^9, 3.609157553947165*^9}}]
}, Open  ]]
},
WindowSize->{740, 752},
WindowMargins->{{-1069, Automatic}, {2, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 188, 2, 29, "Subsubtitle"],
Cell[770, 26, 561, 11, 125, "Text"],
Cell[1334, 39, 142, 2, 28, "Input"],
Cell[1479, 43, 212, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[1716, 51, 260, 5, 46, "Input"],
Cell[1979, 58, 395, 8, 46, "Output"]
}, Open  ]],
Cell[2389, 69, 2114, 36, 467, "Text"],
Cell[CellGroupData[{
Cell[4528, 109, 294, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[4847, 118, 1906, 31, 83, "Print"],
Cell[6756, 151, 2027, 32, 83, "Print"],
Cell[8786, 185, 1471, 24, 68, "Print"],
Cell[10260, 211, 506, 7, 22, "Print"],
Cell[10769, 220, 630, 11, 21, "Print"],
Cell[11402, 233, 1509, 25, 68, "Print"],
Cell[12914, 260, 256, 5, 22, "Print"],
Cell[13173, 267, 298, 7, 22, "Print"],
Cell[13474, 276, 297, 7, 22, "Print"],
Cell[13774, 285, 298, 7, 22, "Print"],
Cell[14075, 294, 291, 7, 22, "Print"],
Cell[14369, 303, 296, 7, 22, "Print"],
Cell[14668, 312, 293, 7, 22, "Print"],
Cell[14964, 321, 293, 7, 22, "Print"],
Cell[15260, 330, 252, 6, 21, "Print"],
Cell[15515, 338, 250, 6, 21, "Print"],
Cell[15768, 346, 250, 6, 21, "Print"],
Cell[16021, 354, 250, 6, 21, "Print"],
Cell[16274, 362, 252, 6, 21, "Print"],
Cell[16529, 370, 250, 6, 21, "Print"],
Cell[16782, 378, 252, 6, 21, "Print"],
Cell[17037, 386, 250, 6, 21, "Print"],
Cell[17290, 394, 252, 6, 22, "Print"],
Cell[17545, 402, 379, 9, 37, "Print"],
Cell[17927, 413, 316, 8, 22, "Print"],
Cell[18246, 423, 123, 2, 22, "Print"],
Cell[18372, 427, 250, 6, 22, "Print"],
Cell[18625, 435, 379, 9, 37, "Print"],
Cell[19007, 446, 316, 8, 22, "Print"],
Cell[19326, 456, 125, 2, 22, "Print"],
Cell[19454, 460, 247, 5, 22, "Print"],
Cell[19704, 467, 379, 9, 37, "Print"],
Cell[20086, 478, 245, 5, 22, "Print"],
Cell[20334, 485, 316, 8, 22, "Print"],
Cell[20653, 495, 379, 9, 37, "Print"],
Cell[21035, 506, 252, 6, 22, "Print"],
Cell[21290, 514, 250, 6, 22, "Print"],
Cell[21543, 522, 123, 2, 22, "Print"],
Cell[21669, 526, 250, 6, 22, "Print"],
Cell[21922, 534, 318, 8, 22, "Print"],
Cell[22243, 544, 250, 6, 22, "Print"],
Cell[22496, 552, 379, 9, 37, "Print"],
Cell[22878, 563, 379, 9, 37, "Print"],
Cell[23260, 574, 379, 9, 37, "Print"],
Cell[23642, 585, 123, 2, 22, "Print"],
Cell[23768, 589, 381, 9, 37, "Print"],
Cell[24152, 600, 316, 8, 22, "Print"],
Cell[24471, 610, 316, 8, 22, "Print"],
Cell[24790, 620, 316, 8, 22, "Print"],
Cell[25109, 630, 316, 8, 22, "Print"],
Cell[25428, 640, 122, 2, 22, "Print"],
Cell[25553, 644, 123, 2, 22, "Print"],
Cell[25679, 648, 123, 2, 22, "Print"],
Cell[25805, 652, 123, 2, 22, "Print"]
}, Open  ]],
Cell[25943, 657, 474, 7, 28, "Output"]
}, Open  ]],
Cell[26432, 667, 342, 6, 68, "Text"],
Cell[26777, 675, 3310, 75, 267, "Input"],
Cell[30090, 752, 1860, 33, 391, "Text"],
Cell[31953, 787, 92, 1, 28, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
